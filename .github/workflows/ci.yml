# -----------------------------------------------------------------------------
#
# Copyright (c) 2017 Sam Cox, Roberto Sommariva
#
# This file is part of the AtChem2 software package.
#
# This file is covered by the MIT license which can be found in the file
# LICENSE.md at the top level of the AtChem2 distribution.
#
# -----------------------------------------------------------------------------

name: AtChem2 CI

# ------------------------------ EVENTS ------------------------------ #
# Controls when the workflow is activated.
on:
  # Triggers when a pull request is created or updated (only on the
  # master branch).
  pull_request:
    branches: [ master ]

  # Triggers when a push is made to the master branch (either by
  # merging a pull request, or by direct commit).
  push:
    branches:
      - master

  # Run manually from the Actions tab.
  workflow_dispatch:

# ------------------------------ JOBS ------------------------------ #
# This workflow contains a single job called `testing`, which compiles
# the AtChem2 model, runs the testsuite, and checks the testsuite code
# coverage using Codecov.
jobs:
  testing:
    # The job runs on both linux (ubuntu) and macos runner images,
    # with three versions of gnu fortran -- the runner images are
    # described here: https://github.com/actions/runner-images
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04] #, macos-11, macos-12]
        fortran: [11] #[9, 10, 11]
        # exclude: #TODO: fortran9 does not work on macos12
        # - os: macos-12
        #   fortran: 9
      fail-fast: false

    # -------------------------------------------------------------
    # Sequence of tasks to be executed as part of the `testing` job:
    # 1. checkout the repository
    # 2. install gfortran (if needed), and AtChem2 dependencies
    # 3. build AtChem2
    # 4. run all tests (indent, style, unit, model)
    # 5. rebuild AtChem2 and run unit, model tests for Codecov
    steps:

      # -------------------------------------------------------------
      # (1) Checkout the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # -------------------------------------------------------------
      # (2) Install gfortran (if not supplied with the runner image)
      # and AtChem2 dependencies

      # gfortran on macos-11
      # - name: Install gfortran-9 (macos-11)
      #   if: matrix.os == 'macos-11' && matrix.fortran == 9
      #   run: brew install gcc@${{ matrix.fortran }}

      # gfortran on macos-12
      # - name: Install gfortran-9 & gfortran-10 (macos-12)
      #   if: matrix.os == 'macos-12' && (matrix.fortran == 9 || matrix.fortran == 10)
      #   run: brew install gcc@${{ matrix.fortran }}

      # CVODE on ubuntu
      - name: Install CVODE (ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: ./tools/install/install_cvode.sh $PWD $(which gfortran-${{ matrix.fortran }})

      # CVODE on macos
      # - name: Install CVODE (macos)
      #   if: startsWith(matrix.os, 'macos')
      #   run: ./tools/install/install_cvode.sh $PWD $(which gfortran-${{ matrix.fortran }})

      # openlibm, numdiff, fruit -- ubuntu & macos
      - name: Install openlibm
        run: ./tools/install/install_openlibm.sh $PWD

      - name: Install numdiff
        run: ./tools/install/install_numdiff.sh $PWD

      - name: Install fruit
        run: sudo ./tools/install/install_fruit.sh $PWD

      # -------------------------------------------------------------
      # (3) Build AtChem2
      - name: Build AtChem2
        # Set FORT_VERSION for use inside the Makefile (called from build_atchem2.sh)
        env:
          FORT_VERSION: ${{ matrix.fortran }}
        run: |
          cp tools/install/Makefile.skel Makefile
          ./build/build_atchem2.sh ./model/mechanism.fac
          # # macos only
          # if [ $RUNNER_OS != "Linux" ] ; then
          #   install_name_tool -change libopenlibm.4.dylib $PWD/openlibm-0.8.1/libopenlibm.4.dylib atchem2 ;
          #   install_name_tool -change @rpath/libsundials_cvode.2.dylib $PWD/cvode/lib/libsundials_cvode.dylib atchem2 ;
          #   install_name_tool -change @rpath/libsundials_fnvecserial.2.dylib $PWD/cvode/lib/libsundials_fnvecserial.dylib atchem2 ;
          #   install_name_tool -change @rpath/libsundials_nvecserial.2.dylib $PWD/cvode/lib/libsundials_nvecserial.dylib atchem2 ;
          # fi

      # -------------------------------------------------------------
      # (4) Run all tests

      - name: Indent and style tests
        run: |
          make indenttest
          make styletest

      - name: Run unit tests
        # Set FORT_VERSION for use inside the Makefile
        env:
          FORT_VERSION: ${{ matrix.fortran }}
        run: |
          # Run unit tests
          export PATH=$PATH:$PWD/numdiff/bin
          make unittests

          # Run full build tests - this will upload `tests` coverage to codecov for each test
          make oldtests
          make modeltests

      # -------------------------------------------------------------
      # (5)

      - name: Run only one version
        if: matrix.os == 'ubuntu-22.04' && matrix.fortran == 11
      #   # Set FORT_VERSION for use inside the Makefile
      #   env:
      #     FORT_VERSION: ${{ matrix.fortran }}
        run: |
          pwd
      #     # Run unit tests
      #     export PATH=$PATH:$PWD/numdiff/bin
      #     make unittests
      #    mv tests/unit_tests/*.gc* .   #Needed to deal with gcc11 changing the way it handles gcda and gcna files


      #    make clean
      #     # Run full build tests - this will upload `tests` coverage to codecov for each test
      #     make oldtests
      #     #make modeltests #TODO: modeltests are temporarily deactivated (pass on linux, fail on macos)

      
      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     #token: ${{ secrets.CODECOV_TOKEN }}
      #     #directory: ./tests/unit_tests/
      #     gcov: true
