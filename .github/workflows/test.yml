# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # ubuntu only
      - name: Run on ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: echo Running on a Linux machine ${{ matrix.os }}
        
      - name: which gfortran
        if: matrix.os == 'ubuntu-latest'
        run: which gfortran
          
      - name: gfortran version
        if: matrix.os == 'ubuntu-latest'
        run: gfortran --version

      # - name: install liblapack-dev
      #   if: matrix.os == 'ubuntu-latest'
      #   run: sudo apt-get install liblapack-dev
      
      - name: Install cvode
        if: matrix.os == 'ubuntu-latest'
        run: ./tools/install/install_cvode.sh $PWD $(which gfortran)

      # macOS only
      - name: Run on macOS
        if: matrix.os == 'macos-latest'
        run: echo Running on a macOS ${{ matrix.os }}
      
      - name: which gfortran (macOS)
        if: matrix.os == 'macos-latest'
        run: which gfortran-8
      
      # - name: gfortran version (macOS)
      #   if: matrix.os == 'macos-latest'
      #   run: alias gfortran='gfortran-8'
      
      # - name: Install gettext (macOS)
      #   if: matrix.os == 'macos-latest'
      #   run: brew install gettext
  
      - name: Install cvode (macOS)
        if: matrix.os == 'macos-latest'
        run: ./tools/install/install_cvode.sh $PWD $(which gfortran-8)
      
      # both OSs
      - name: Install openlibm
        run: ./tools/install/install_openlibm.sh $PWD
      
      - name: Install numdiff
        run: ./tools/install/install_numdiff.sh $PWD ; export PATH=$PATH:$PWD/numdiff/bin
      
      - name: Install fruit
        run: ./tools/install/install_fruit.sh $PWD

      - name: Build AtChem2
        run: |
          echo $PWD
          ls $PWD
          cd $GITHUB_WORKSPACE
          echo $pwd
          cp tools/install/Makefile.skel Makefile
          which gfortran-8
          ls /usr/local/lib
          ./build/build_atchem2.sh ./mcm/mechanism_test.fac
      
      - name: Run AtChem2
        run: |
          if [ $RUNNER_OS != 'Linux' ] ; then 
            install_name_tool -change libopenlibm.dylib.1 $PWD/openlibm-0.4.1/libopenlibm.dylib.1 atchem2 ; 
            install_name_tool -change @rpath/libsundials_cvode.2.dylib $PWD/cvode/lib/libsundials_cvode.dylib atchem2 ; 
            install_name_tool -change @rpath/libsundials_fnvecserial.2.dylib $PWD/cvode/lib/libsundials_fnvecserial.dylib atchem2 ; 
            install_name_tool -change @rpath/libsundials_nvecserial.2.dylib $PWD/cvode/lib/libsundials_nvecserial.dylib atchem2 ;
          fi
          ./atchem2
          if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then bash <(curl -s https://codecov.io/bash) -F build ; fi
          make indenttest
          make styletest
          make clean
          make unittests
          if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then bash <(curl -s https://codecov.io/bash) -F unittests ; fi
          make clean
          make tests
